#!/bin/sh

. /boot/userconfig.txt

i=0

function initialize_bt()
{
	hciconfig hci0 up
	if hciconfig hci0 | grep UP > /dev/null ; then return 0 ; else return 1 ; fi
}

until [[ $i = 3 ]]
do
	echo "Initializing Bluetooth adapter"
	initialize_bt
	if [[ $? -eq 0 ]]
	then	echo "Bluetooth adapter successfully initialized!"
		i=3
	else	echo "Could not initialize Bluetooth adapter, will retry "$((2-$i))" times..."
		i=$((i+1))
		sleep 1
	fi
done

if ! /bin/hciconfig $dev | grep -q "Bus: UART"
then
    echo Not a UART-attached BT Modem
else
	if ( /usr/bin/hcitool -i $dev dev | grep -q -E '\s(B8:27:EB:|DC:A6:32:)' )
	then
    	echo Raspberry Pi BDADDR already set
	else
		SERIAL=`cat /proc/device-tree/serial-number | cut -c9-`
		B1=`echo $SERIAL | cut -c3-4`
		B2=`echo $SERIAL | cut -c5-6`
		B3=`echo $SERIAL | cut -c7-8`
		BDADDR=`printf '0x%02x 0x%02x 0x%02x 0xeb 0x27 0xb8' $((0x$B3 ^ 0xaa)) $((0x$B2 ^ 0xaa)) $((0x$B1 ^ 0xaa))`
		/usr/bin/hcitool -i $dev cmd 0x3f 0x001 $BDADDR
		/bin/hciconfig $dev reset
		# Force reinitialisation to allow extra features such as Secure Simple Pairing
		# to be enabled
		/usr/bin/bluetoothctl power off
		/usr/bin/bluetoothctl power on
		# Route SCO packets to the HCI interface (enables HFP/HSP)
		/usr/bin/hcitool -i $dev cmd 0x3f 0x1c 0x01 0x02 0x00 0x01 0x01 > /dev/null
	fi
fi

echo "Setting Bluetooth page and inquiry scan"
hciconfig hci0 piscan && echo "hci0 set to pscan and iscan" || echo "hci0: could not set modes!"

echo "Setting Bluetooth simple paring mode to OFF"
hciconfig hci0 sspmode 0 && echo "hci0 simple pairing set to off" || echo "hci0: unable to deactivate simple pairing mode!"

echo "Setting Bluetooth device Class to HiFi Audio Device"
hciconfig hci0 class 0x200428 && hciconfig hci0 class && echo "hci0 set to Class HiFi Audio device" || echo "hci0: unable to set class HiFi Audio device"

echo "Setting Bluetooth local name to $PLAYERNAME"
hciconfig hci0 name "$PLAYERNAME" && echo "hci0 set to name $PLAYERNAME" || echo "hci0: unable to set name!"

exit 0
